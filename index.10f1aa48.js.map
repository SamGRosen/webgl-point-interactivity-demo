{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/scope-hoisting/lib/prelude.js","./node_modules/d3-format/src/formatDecimal.js","./node_modules/d3-format/src/exponent.js","./node_modules/d3-format/src/formatGroup.js","./node_modules/d3-format/src/formatNumerals.js","./node_modules/d3-format/src/formatSpecifier.js","./node_modules/d3-format/src/formatTrim.js","./node_modules/d3-format/src/formatPrefixAuto.js","./node_modules/d3-format/src/formatRounded.js","./node_modules/d3-format/src/formatTypes.js","./node_modules/d3-format/src/identity.js","./node_modules/d3-format/src/locale.js","./node_modules/d3-format/src/defaultLocale.js","./node_modules/d3-format/src/precisionRound.js","./src/epiviz.gl/genome-sizes.js","./node_modules/d3-color/src/define.js","./node_modules/d3-color/src/color.js","./node_modules/d3-color/src/math.js","./node_modules/d3-color/src/cubehelix.js","./src/epiviz.gl/utilities.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","var $parcel$modules = {};\nvar $parcel$bundles = {};\n\nif (parcelRequire == null) {\n  parcelRequire = function(name) {\n    // Execute the bundle wrapper function if there is one registered.\n    if (name in $parcel$bundles) {\n      let wrapper = $parcel$bundles[name];\n      delete $parcel$bundles[name];\n      wrapper();\n    }\n\n    if (name in $parcel$modules) {\n      return $parcel$modules[name];\n    }\n\n    // Try the node require function if it exists.\n    // Do not use `require` to prevent Webpack from trying to bundle this call\n    if (typeof module !== 'undefined' && typeof module.require === 'function') {\n      return module.require(name);\n    }\n\n    var err = new Error(\"Cannot find module '\" + name + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, exports) {\n    $parcel$modules[id] = exports;\n  };\n\n  parcelRequire.registerBundle = function registerBundle(id, fn) {\n    $parcel$bundles[id] = fn;\n    $parcel$modules[id] = {};\n  };\n\n  $parcel$global[parcelRequireName] = parcelRequire;\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import { scale } from \"./utilities\";\nimport { format, precisionRound } from \"d3-format\";\n\n/**\n * Create a function which maps a genome pair to a location in the entire genome\n *\n * @param {String} genomeId key from genomeSizes object\n * @returns a function which maps a (chrId, pairNum) => to\n *  a number between 1 and total number of genes in the genome\n */\nconst createPairMapperToGenome = (genomeId) => {\n  let chrSizes = genomeSizes[genomeId];\n\n  let chrStarts = new Map();\n  let cumulativeTotal = 0;\n  chrSizes.forEach((value, key) => {\n    chrStarts.set(key, cumulativeTotal);\n    cumulativeTotal += value;\n  });\n\n  return (chr, pairNum) => {\n    return chrStarts.get(chr) + pairNum;\n  };\n};\n\nclass GenomeScale {\n  /**\n   * A scale used to map a genome pair to a location between -1 and 1 for data visualization.\n   * Also contains inverse and utility functions for getting labels for axis.\n   *\n   * @param {String} genomeId key from genomeSizes object\n   * @param {Array} domain array of length 2 containing the start and end of the genome\n   *   for the scale. ex: [\"chr2:1000\", \"chr3:2000\"]\n   */\n  constructor(genomeId, domain) {\n    if (genomeSizes[genomeId] === undefined) {\n      console.error(`${genomeId} is not a recognized genome!`);\n    }\n    this.genomeId = genomeId;\n    this.domain = domain;\n\n    let [startChr, startPair] = domain[0]\n      .substring(3) // Remove chr\n      .split(\":\"); // split chromesome and pair number\n    startPair = parseInt(startPair);\n\n    let [endChr, endPair] = domain[1].substring(3).split(\":\");\n    endPair = parseInt(endPair);\n\n    this.mapPairToGenomeIndex = createPairMapperToGenome(genomeId);\n    const firstPairInDomain = this.mapPairToGenomeIndex(startChr, startPair);\n    const lastPairInDomain = this.mapPairToGenomeIndex(endChr, endPair);\n    this.mapGenomeIndexToClipSpace = scale(\n      [firstPairInDomain, lastPairInDomain],\n      [-1, 1]\n    );\n    this.mapGenomeIndexToClipSpaceInverse = scale(\n      [-1, 1],\n      [firstPairInDomain, lastPairInDomain]\n    );\n  }\n\n  /**\n   * Map a genome pair to [-1, 1] with the parts.\n   *\n   * @param {String} chr id of chromosome in genome\n   * @param {Number} pair location in chromosome\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromParts(chr, pair) {\n    return this.mapGenomeIndexToClipSpace(this.mapPairToGenomeIndex(chr, pair));\n  }\n\n  /**\n   * Utility method for calling this.toClipSpaceFromParts.\n   *\n   * @param {String} pairStr in form \"chrID:geneNumber\" ex: \"chr1:1000\"\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromString(pairStr) {\n    let [chr, pair] = pairStr.substring(3).split(\":\");\n    pair = parseInt(pair);\n    return this.toClipSpaceFromParts(chr, pair);\n  }\n\n  /**\n   * Get the gene id from a value between [-1, 1]\n   *\n   * @param {Number} num number between [-1, 1]\n   * @param {String} formatting used for formatting gene number with d3-format\n   * @returns `chr${chrId}:${chrLoc}`\n   */\n  inverse(num, formatting = false) {\n    let genomeSpot = Math.floor(this.mapGenomeIndexToClipSpaceInverse(num));\n    let chrId;\n    let chrLoc;\n    let cumulativeTotal = 0;\n    for (const [chrKey, pairCount] of genomeSizes[this.genomeId].entries()) {\n      if (cumulativeTotal + pairCount >= genomeSpot) {\n        chrLoc = genomeSpot - cumulativeTotal;\n        chrId = chrKey;\n        break;\n      }\n      cumulativeTotal += pairCount;\n    }\n\n    return formatting\n      ? `chr${chrId}:${format(formatting)(chrLoc)}`\n      : `chr${chrId}:${chrLoc}`;\n  }\n\n  /**\n   * Get a sequence of ticks for a range in the genome.\n   *\n   * @param {Number} start number between [-1, 1]\n   * @param {Number} end number between [-1, 1] > start\n   * @returns object with tickCoords and corresponding tickLabels property\n   */\n  getTickCoordsAndLabels(start, end) {\n    let [startChr, startPair] = this.inverse(start).substring(3).split(\":\");\n    let [endChr, endPair] = this.inverse(end).substring(3).split(\":\");\n\n    const toReturn = [];\n    let suggestedFormat;\n    if (startChr === endChr) {\n      let difference = endPair - startPair;\n      let magnitude = Math.floor(Math.log10(difference));\n      let startingValue = startPair - (startPair % 10 ** magnitude);\n      suggestedFormat = precisionRound(10 ** magnitude, startingValue);\n\n      for (\n        let currValue = startingValue;\n        currValue < endPair;\n        currValue += 10 ** magnitude\n      ) {\n        toReturn.push(this.toClipSpaceFromParts(startChr, currValue));\n      }\n    } else {\n      suggestedFormat = \"1\";\n      for (const chrId of genomeSizes[this.genomeId].keys()) {\n        toReturn.push(this.toClipSpaceFromParts(chrId, 1));\n      }\n    }\n    return {\n      tickCoords: toReturn,\n      tickLabels: toReturn.map((coord) =>\n        this.inverse(coord, format(`.${suggestedFormat}s`))\n      ),\n    };\n  }\n\n  /**\n   * Utility method for getting a GenomeScale across an entire genome.\n   *\n   * @param {String} genomeId from genomeSizes\n   * @returns a GenomeScale across an entire genome\n   */\n  static completeScale(genomeId) {\n    const chrSizes = genomeSizes[genomeId];\n    const finalEntry = [...chrSizes.entries()][chrSizes.size - 1];\n\n    return new GenomeScale(genomeId, [\n      \"chr1:1\",\n      `chr${finalEntry[0]}:${finalEntry[1]}`,\n    ]);\n  }\n}\n\n/**\n * Available genomes to visualize. Each genome is a map from chromosome id to number of genes in chromosome.\n * Order matters as maps remember insertion order.\n */\nconst genomeSizes = {\n  hg38: new Map([\n    [\"1\", 248956422], // chr1\n    [\"2\", 242193529], // chr2\n    [\"3\", 198295559], // ...\n    [\"4\", 190214555],\n    [\"5\", 181538259],\n    [\"6\", 170805979],\n    [\"7\", 159345973],\n    [\"8\", 145138636],\n    [\"9\", 138394717],\n    [\"10\", 135086622],\n    [\"11\", 133797422],\n    [\"12\", 133275309],\n    [\"13\", 114364328],\n    [\"14\", 107043718],\n    [\"15\", 101991189],\n    [\"16\", 90338345],\n    [\"17\", 83257441],\n    [\"18\", 80373285],\n    [\"19\", 58617616],\n    [\"20\", 64444167], // ...\n    [\"21\", 46709983], // chr21\n    [\"22\", 50818468], // chr22\n    [\"X\", 156040895], // chrX\n    [\"Y\", 57227415], // chrY\n  ]),\n\n  hg19: new Map([\n    [\"1\", 249250621], // chr1\n    [\"2\", 243199373], // chr2\n    [\"3\", 198022430], // ...\n    [\"4\", 191154276],\n    [\"5\", 180915260],\n    [\"6\", 171115067],\n    [\"7\", 159138663],\n    [\"8\", 146364022],\n    [\"9\", 141213431],\n    [\"10\", 135534747],\n    [\"11\", 135006516],\n    [\"12\", 133851895],\n    [\"13\", 115169878],\n    [\"14\", 107349540],\n    [\"15\", 102531392],\n    [\"16\", 90354753],\n    [\"17\", 81195210],\n    [\"18\", 78077248],\n    [\"19\", 59128983],\n    [\"20\", 63025520], // ...\n    [\"21\", 48129895], // chr21\n    [\"22\", 51304566], // chr22\n    [\"X\", 155270560], // chrX\n    [\"Y\", 59373566], // chrY\n  ]),\n\n  mm39: new Map([\n    [\"1\", 195154279], // chr1\n    [\"2\", 181755017], // chr2\n    [\"3\", 159745316], // ...\n    [\"4\", 156860686],\n    [\"5\", 151758149],\n    [\"6\", 149588044],\n    [\"7\", 144995196],\n    [\"8\", 130127694],\n    [\"9\", 124359700],\n    [\"10\", 130530862],\n    [\"11\", 121973369],\n    [\"12\", 120092757],\n    [\"13\", 120883175],\n    [\"14\", 125139656],\n    [\"15\", 104073951],\n    [\"16\", 98008968],\n    [\"17\", 95294699], // ...\n    [\"18\", 90720763], // chr18\n    [\"19\", 61420004], // chr19\n    [\"X\", 169476592], // chrX\n    [\"Y\", 91455967], // chrY\n  ]),\n};\n\nexport { genomeSizes, GenomeScale };\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","import { GenomeScale } from \"./genome-sizes\";\nconst d3 = require(\"d3-color\");\n\n/**\n * Returns a linear scale to map elements in domain to elements in range.\n * @param {Array} domain array of length two containing minimum and maximum values\n * @param {Array} range array of length two containing minimum and maximum values\n * @returns linear scale mapping domain to range\n */\nfunction scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\n/**\n * Maps RGB values to integer for webgl buffer.\n *\n * @param {Integer} red value from 0 to 255\n * @param {Integer} green value from 0 to 255\n * @param {Integer} blue value from 0 to 255\n * @returns RGB hex value as integer\n */\nfunction rgbToHex(red, green, blue) {\n  return (red << 16) | (green << 8) | (blue << 0);\n}\n\nfunction rgbStringToHex(rgb) {\n  const colorVals = rgb.substring(4, rgb.length - 1).split(\",\");\n  return rgbToHex(...colorVals.map((asStr) => parseInt(asStr)));\n}\n\nfunction colorSpecifierToHex(specifier) {\n  if (!isNaN(specifier)) {\n    // Specifier is already a hex value\n    return Math.floor(specifier);\n  }\n  const asColor = d3.color(specifier);\n  return rgbToHex(asColor.r, asColor.g, asColor.b);\n}\n\n/**\n * Get the VIEWPORT of the schema to be used by the mouseReader.\n * If all types for a dimension across tracks are categorical or genomic,\n * will default to [-1, 1] for that dimension for the mouseReader.\n *\n * @param {Object} schema of visualization\n * @returns [smallestX, largestX, smallestY, largestY] of viewport\n */\nfunction getViewportForSchema(schema) {\n  let smallestX = Number.POSITIVE_INFINITY;\n  let largestX = Number.NEGATIVE_INFINITY;\n  let smallestY = Number.POSITIVE_INFINITY;\n  let largestY = Number.NEGATIVE_INFINITY;\n\n  schema.tracks.forEach((track) => {\n    let xDomain = track.x.domain;\n    let yDomain = track.y.domain;\n    if (xDomain) {\n      smallestX = xDomain[0] < smallestX ? xDomain[0] : smallestX;\n      largestX = xDomain[1] > largestX ? xDomain[1] : largestX;\n    }\n    if (yDomain) {\n      smallestY = yDomain[0] < smallestY ? yDomain[0] : smallestY;\n      largestY = yDomain[1] > largestY ? yDomain[1] : largestY;\n    }\n  });\n  smallestX = smallestX === Number.POSITIVE_INFINITY ? -1 : smallestX;\n  largestX = largestX === Number.NEGATIVE_INFINITY ? 1 : largestX;\n  smallestY = smallestY === Number.POSITIVE_INFINITY ? -1 : smallestY;\n  largestY = largestY === Number.NEGATIVE_INFINITY ? 1 : largestY;\n\n  return [smallestX, largestX, smallestY, largestY];\n}\n\n/**\n * Given a schema, return a SCALE to be used for mapping data points to clip space\n * for the drawer.\n *\n * @param {String} dimension either x or y\n * @param {Object} schema for the visualization\n * @returns\n */\nconst getScaleForSchema = (dimension, schema) => {\n  if (dimension !== \"x\" && dimension !== \"y\") {\n    console.error(`${dimension} is not x or y!`);\n  }\n  let genomic = false;\n  let genome;\n  for (const track of schema.tracks) {\n    if (track[dimension].type && track[dimension].type.includes(\"genomic\")) {\n      genome = track[dimension].genome;\n      genomic = true;\n      break;\n    }\n  }\n\n  if (!genomic) {\n    const viewport = getViewportForSchema(schema);\n    if (dimension === \"x\") {\n      return scale([viewport[0], viewport[1]], [-1, 1]);\n    }\n    return scale([viewport[2], viewport[3]], [-1, 1]);\n  }\n\n  const geneScale = GenomeScale.completeScale(genome);\n\n  let smallestGene = undefined;\n  let smallestGeneValue = Number.POSITIVE_INFINITY;\n  let largestGene = undefined;\n  let largestGeneValue = Number.NEGATIVE_INFINITY;\n\n  for (const track of schema.tracks) {\n    let xDomain = track[dimension].domain;\n    if (xDomain) {\n      if (geneScale.toClipSpaceFromString(xDomain[0]) < smallestGeneValue) {\n        smallestGeneValue = geneScale.toClipSpaceFromString(xDomain[0]);\n        smallestGene = xDomain[0];\n      }\n\n      if (geneScale.toClipSpaceFromString(xDomain[1]) > largestGeneValue) {\n        largestGeneValue = geneScale.toClipSpaceFromString(xDomain[1]);\n        largestGene = xDomain[1];\n      }\n    }\n  }\n\n  return new GenomeScale(genome, [smallestGene, largestGene]);\n};\n\nexport {\n  scale,\n  rgbToHex,\n  rgbStringToHex,\n  getViewportForSchema,\n  colorSpecifierToHex,\n  getScaleForSchema,\n};\n"],"names":["$parcel$global","globalThis","self","window","global","e","n","v","Object","defineProperty","get","enumerable","$parcel$modules","$parcel$bundles","parcelRequire","name","wrapper","module","require","err","Error","code","register","id","exports","registerBundle","fn","parcelRequireName","x","Math","abs","round","toLocaleString","replace","toString","p","i","toExponential","indexOf","coefficient","slice","length","NaN","grouping","thousands","value","width","t","j","g","max","push","substring","reverse","join","numerals","$a8405862f1d5b262cdb2954a0f30f9f1$var$re","specifier","match","exec","$a8405862f1d5b262cdb2954a0f30f9f1$export$FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","trim","type","$a8405862f1d5b262cdb2954a0f30f9f1$export$default","prototype","undefined","s","out","i0","i1","$4f54a6fcbd12acee736587c0a0c51098$export$prefixExponent","d","exponent","min","floor","Array","toFixed","toPrecision","toUpperCase","$b3ada3f96306fbdafba4b22584a4e750$var$map","map","$b3ada3f96306fbdafba4b22584a4e750$var$prefixes","locale","group","call","Number","currencyPrefix","currency","currencySuffix","decimal","String","percent","minus","nan","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","c","valueNegative","isNaN","charCodeAt","Infinity","padding","format","f","newFormat","k","pow","formatPrefix","$c8cf865515e7e5d7357b07df1e313b78$var$locale","$c8cf865515e7e5d7357b07df1e313b78$export$format","$c8cf865515e7e5d7357b07df1e313b78$export$formatPrefix","$c8cf865515e7e5d7357b07df1e313b78$export$default","definition","step","$2e9e6b6c3378724b336406626f99a6bc$var$createPairMapperToGenome","genomeId","chrSizes","$2e9e6b6c3378724b336406626f99a6bc$export$genomeSizes","chrStarts","Map","cumulativeTotal","forEach","key","set","chr","pairNum","constructor","domain","console","error","startChr","startPair","split","parseInt","endChr","endPair","mapPairToGenomeIndex","firstPairInDomain","lastPairInDomain","mapGenomeIndexToClipSpace","mapGenomeIndexToClipSpaceInverse","toClipSpaceFromParts","pair","toClipSpaceFromString","pairStr","inverse","num","formatting","genomeSpot","chrId","chrLoc","chrKey","pairCount","entries","getTickCoordsAndLabels","start","end","toReturn","suggestedFormat","difference","magnitude","log10","startingValue","currValue","keys","tickCoords","tickLabels","coord","completeScale","finalEntry","size","$2e9e6b6c3378724b336406626f99a6bc$export$GenomeScale","hg38","hg19","mm39","factory","parent","create","$af4ad10b60118211d1082e6b107c9493$export$darker","$af4ad10b60118211d1082e6b107c9493$export$brighter","$af4ad10b60118211d1082e6b107c9493$var$reI","$af4ad10b60118211d1082e6b107c9493$var$reN","$af4ad10b60118211d1082e6b107c9493$var$reP","$af4ad10b60118211d1082e6b107c9493$var$reHex","$af4ad10b60118211d1082e6b107c9493$var$reRgbInteger","RegExp","$af4ad10b60118211d1082e6b107c9493$var$reRgbPercent","$af4ad10b60118211d1082e6b107c9493$var$reRgbaInteger","$af4ad10b60118211d1082e6b107c9493$var$reRgbaPercent","$af4ad10b60118211d1082e6b107c9493$var$reHslPercent","$af4ad10b60118211d1082e6b107c9493$var$reHslaPercent","$af4ad10b60118211d1082e6b107c9493$var$named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","$af4ad10b60118211d1082e6b107c9493$export$Color","$af4ad10b60118211d1082e6b107c9493$export$default","copy","channels","assign","displayable","rgb","hex","$af4ad10b60118211d1082e6b107c9493$var$color_formatHex","formatHex","formatHsl","$af4ad10b60118211d1082e6b107c9493$var$color_formatHsl","formatRgb","$af4ad10b60118211d1082e6b107c9493$var$color_formatRgb","$af4ad10b60118211d1082e6b107c9493$export$hslConvert","m","l","$af4ad10b60118211d1082e6b107c9493$var$rgbn","$af4ad10b60118211d1082e6b107c9493$export$Rgb","$af4ad10b60118211d1082e6b107c9493$var$rgba","$af4ad10b60118211d1082e6b107c9493$var$hsla","hasOwnProperty","r","b","a","o","opacity","arguments","$af4ad10b60118211d1082e6b107c9493$export$rgbConvert","$af4ad10b60118211d1082e6b107c9493$export$rgb","brighter","darker","$af4ad10b60118211d1082e6b107c9493$var$rgb_formatHex","$af4ad10b60118211d1082e6b107c9493$var$rgb_formatRgb","$af4ad10b60118211d1082e6b107c9493$var$hex","h","$af4ad10b60118211d1082e6b107c9493$var$Hsl","$af4ad10b60118211d1082e6b107c9493$export$hsl","m2","m1","$af4ad10b60118211d1082e6b107c9493$var$hsl2rgb","$c178fae7767ea8147bbb573141e780e5$export$radians","PI","$c178fae7767ea8147bbb573141e780e5$export$degrees","$79f190ed402495135fad2dd69bf11529$var$A","$79f190ed402495135fad2dd69bf11529$var$B","$79f190ed402495135fad2dd69bf11529$var$C","$79f190ed402495135fad2dd69bf11529$var$D","$79f190ed402495135fad2dd69bf11529$var$E","$79f190ed402495135fad2dd69bf11529$var$ED","$79f190ed402495135fad2dd69bf11529$var$EB","$79f190ed402495135fad2dd69bf11529$var$BC_DA","$79f190ed402495135fad2dd69bf11529$export$Cubehelix","bl","sqrt","atan2","$79f190ed402495135fad2dd69bf11529$var$cubehelixConvert","$79f190ed402495135fad2dd69bf11529$export$default","cosh","cos","sinh","sin","range","domainLength","rangeLength","slope","intercept","colorVals","$794bbb298c1fc0cc3157526701549b8c$export$rgbToHex","asStr","asColor","schema","smallestX","POSITIVE_INFINITY","largestX","NEGATIVE_INFINITY","smallestY","largestY","tracks","track","xDomain","yDomain","y","$794bbb298c1fc0cc3157526701549b8c$export$getScaleForSchema","dimension","genomic","genome","includes","viewport","$794bbb298c1fc0cc3157526701549b8c$export$getViewportForSchema","$794bbb298c1fc0cc3157526701549b8c$export$scale","geneScale","smallestGene","smallestGeneValue","largestGene","largestGeneValue"],"version":3,"file":"index.10f1aa48.js.map"}