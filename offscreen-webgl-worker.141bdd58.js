!function(){function t(t,e){const i=t[1]-t[0],r=(e[1]-e[0])/i,s=e[1]-r*t[1];return t=>r*t+s}function e(t,e,i){const r=t.createShader(e);return t.shaderSource(r,i),t.compileShader(r),t.getShaderParameter(r,t.COMPILE_STATUS)?r:(console.error(`Could not compile shader: ${t.getShaderInfoLog(r)}`),t.deleteShader(r),null)}class i extends class extends class{constructor(t){this.canvas=t.canvas,this.width=t.canvas.width,this.height=t.canvas.height,this.receiveState(t)}receiveState(t){this.minX=t.minX,this.maxX=t.maxX,this.minY=t.minY,this.maxY=t.maxY,this.currentXRange=[...t.currentXRange],this.currentYRange=[...t.currentYRange],this.needsAnimation=!0}tick(){}animate(){}render(){this.lastFrame&&cancelAnimationFrame(this.lastFrame)}}{constructor(e){super(e),this.gl=this.canvas.getContext("webgl"),this.gl?(this.sampleColors=new Map("ABCDEFGHIJKLMNOPQRSTUVWXYZ012".split("").map((t=>[t,[Math.random(),Math.random(),Math.random(),.01]]))),this.xTSNEScale=t([-10,10],[-1,1]),this.yTSNEScale=t([-10,10],[-1,1]),this.positions=[],this.colors=[]):console.error("Unable to initialize WebGL!")}getWebGLViewport(){const e=this.currentXRange[1]-this.currentXRange[0],i=this.currentYRange[1]-this.currentYRange[0],r=(this.maxX-this.minX)/e*this.width,s=(this.maxY-this.minY)/i*this.height,a=t([this.minX,this.maxX],[0,-r]),o=t([this.minY,this.maxY],[0,-s]);return[a(this.currentXRange[0]),o(this.currentYRange[0]),r,s]}populateBuffers(t){console.log(t),t.split("\n").forEach((t=>{const e=t.split(","),i=parseFloat(e[1]),r=parseFloat(e[2]);e[0]&&i&&r&&(this.positions.push(this.xTSNEScale(i),this.yTSNEScale(r)),console.log(e),console.log(this.sampleColors.get(e[0])),this.colors.push(...this.sampleColors.get(e[0])))}))}clearBuffers(){this.positions=[],this.colors=[]}animate(){if(!this.needsAnimation)return this.lastFrame=requestAnimationFrame(this.animate.bind(this)),void this.tick();this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.SRC_COLOR,this.gl.DST_COLOR),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT);const t=this.getWebGLViewport();this.gl.viewport(t[0],t[1],t[2],t[3]),this.gl.drawArrays(this.gl.POINTS,0,this.vertexCount),this.needsAnimation=!1,this.lastFrame=requestAnimationFrame(this.animate.bind(this)),this.tick()}render(){super.render(),this.shaderProgram=function(t,i,r){const s=e(t,t.VERTEX_SHADER,i),a=e(t,t.FRAGMENT_SHADER,r),o=t.createProgram();return t.attachShader(o,s),t.attachShader(o,a),t.linkProgram(o),t.getProgramParameter(o,t.LINK_STATUS)?o:(console.error(`Unable to initialize the shader program: ${t.getProgramInfoLog(o)}`),null)}(this.gl,"\n  attribute vec4 aVertexPosition;\n  attribute vec4 aVertexColor;\n\n  varying lowp vec4 vColor;\n\n  void main(void) {\n    gl_Position = aVertexPosition;\n    vColor = aVertexColor;\n    gl_PointSize = 1.0;\n  }\n","\n  varying lowp vec4 vColor;\n\n  void main(void) {\n    gl_FragColor = vColor;\n  }\n"),this.programInfo={program:this.shaderProgram,attribLocations:{vertexPosition:this.gl.getAttribLocation(this.shaderProgram,"aVertexPosition"),vertexColor:this.gl.getAttribLocation(this.shaderProgram,"aVertexColor")}},this.vertexCount=this.positions.length/2,this.positionBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this.positions),this.gl.STATIC_DRAW),this.colorBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.colorBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this.colors),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.vertexAttribPointer(this.programInfo.attribLocations.vertexPosition,2,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(this.programInfo.attribLocations.vertexPosition),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.colorBuffer),this.gl.vertexAttribPointer(this.programInfo.attribLocations.vertexColor,4,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(this.programInfo.attribLocations.vertexColor),this.gl.useProgram(this.programInfo.program),this.lastFrame&&cancelAnimationFrame(this.lastFrame),this.needsAnimation=!0,this.animate()}}{tick(){postMessage({type:"tick"})}}self.onmessage=t=>{switch(t.data.type){case"init":self.drawer=new i(t.data);break;case"state":self.drawer.receiveState(t.data);break;case"render":self.drawer.receiveState(t.data),self.drawer.render();break;case"buffer":self.drawer.populateBuffers(t.data.responseData);break;case"clearBuffers":self.drawer.clearBuffers();break;default:console.error(`Received unknown message type: ${t.type}`)}}}();
//# sourceMappingURL=offscreen-webgl-worker.141bdd58.js.map
