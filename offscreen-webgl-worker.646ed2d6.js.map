{"mappings":"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wGAEkB4d;ICZTE,sDAAane,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA,gEACA,sEACA7d;wGAEkB8d;ICZTC,sDAAape,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA,gEACA,sEACA7d;wGAEkB+d;ICZTC,sDAAare,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA,gEACA,sEACA7d;wGAEkBge;ICZTC,sDAAate,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA,gEACA,sEACA7d;wGAEkBie;ICZTC,sDAAave,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA,gEACA,sEACA7d;wGAEkBke;ICZTC,sDAAaxe,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA,gEACA,sEACA7d;wGAEkBme;ICZTC,sDAAaze,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA,gEACA,sEACA7d;wGAEkBoe;ICZTC,sDAAa1e,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA,gEACA,sEACA7d;wGAEkBqe;ICZTC,sDAAa3e,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBse;ICVTC,sDAAa5e,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBue;ICVTC,sDAAa7e,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBwe;ICVTC,sDAAa9e,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBye;ICVTC,sDAAa/e,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkB0e;ICVTC,sDAAahf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkB2e;ICVTC,sDAAajf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkB4e;ICVTC,sDAAalf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkB6e;ICVTC,sDAAanf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkB8e;ICVTC,sDAAapf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkB+e;ICVTC,sDAAarf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBgf;ICVTC,sDAAatf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBif;ICVTC,sDAAavf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBkf;ICVTC,sDAAaxf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBmf;ICVTC,sDAAazf,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBof;ICVTC,sDAAa1f,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBqf;ICVTC,sDAAa3f,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBsf;ICVTC,sDAAa5f,MAAM,GAAGke,OAC/B,sBACA,4BACA,kCACA,wCACA,8CACA,oDACA,0DACA7d;wGAEkBuf;uDCbL,UAAShiB;EACtBA,IAAIlB,KAAKqB,IAAI,GAAGrB,KAAKoD,IAAI,GAAGlC;SACrB,SACDlB,KAAKqB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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/d3-format/src/formatDecimal.js","./node_modules/d3-format/src/exponent.js","./node_modules/d3-format/src/formatGroup.js","./node_modules/d3-format/src/formatNumerals.js","./node_modules/d3-format/src/formatSpecifier.js","./node_modules/d3-format/src/formatTrim.js","./node_modules/d3-format/src/formatPrefixAuto.js","./node_modules/d3-format/src/formatRounded.js","./node_modules/d3-format/src/formatTypes.js","./node_modules/d3-format/src/identity.js","./node_modules/d3-format/src/locale.js","./node_modules/d3-format/src/defaultLocale.js","./node_modules/d3-format/src/precisionRound.js","./src/epiviz.gl/genome-sizes.js","./node_modules/d3-color/src/define.js","./node_modules/d3-color/src/color.js","./node_modules/d3-color/src/math.js","./node_modules/d3-color/src/cubehelix.js","./src/epiviz.gl/utilities.js","./src/epiviz.gl/vertex-calculator.js","./node_modules/d3-scale-chromatic/src/colors.js","./node_modules/d3-scale-chromatic/src/categorical/category10.js","./node_modules/d3-scale-chromatic/src/categorical/Accent.js","./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","./node_modules/d3-scale-chromatic/src/categorical/Paired.js","./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","./node_modules/d3-scale-chromatic/src/categorical/Set1.js","./node_modules/d3-scale-chromatic/src/categorical/Set2.js","./node_modules/d3-scale-chromatic/src/categorical/Set3.js","./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js","./node_modules/d3-interpolate/src/basis.js","./node_modules/d3-interpolate/src/basisClosed.js","./node_modules/d3-interpolate/src/constant.js","./node_modules/d3-interpolate/src/color.js","./node_modules/d3-interpolate/src/rgb.js","./node_modules/d3-interpolate/src/cubehelix.js","./node_modules/d3-scale-chromatic/src/ramp.js","./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js","./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js","./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","./src/epiviz.gl/schema-processor.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import { scale } from \"./utilities\";\nimport { format, precisionRound } from \"d3-format\";\n\n/**\n * Create a function which maps a genome pair to a location in the entire genome\n *\n * @param {String} genomeId key from genomeSizes object\n * @returns a function which maps a (chrId, pairNum) => to\n *  a number between 1 and total number of genes in the genome\n */\nconst createPairMapperToGenome = (genomeId) => {\n  let chrSizes = genomeSizes[genomeId];\n\n  let chrStarts = new Map();\n  let cumulativeTotal = 0;\n  chrSizes.forEach((value, key) => {\n    chrStarts.set(key, cumulativeTotal);\n    cumulativeTotal += value;\n  });\n\n  return (chr, pairNum) => {\n    return chrStarts.get(chr) + pairNum;\n  };\n};\n\nclass GenomeScale {\n  /**\n   * A scale used to map a genome pair to a location between -1 and 1 for data visualization.\n   * Also contains inverse and utility functions for getting labels for axis.\n   *\n   * @param {String} genomeId key from genomeSizes object\n   * @param {Array} domain array of length 2 containing the start and end of the genome\n   *   for the scale. ex: [\"chr2:1000\", \"chr3:2000\"]\n   */\n  constructor(genomeId, domain) {\n    if (genomeSizes[genomeId] === undefined) {\n      console.error(`${genomeId} is not a recognized genome!`);\n    }\n    this.genomeId = genomeId;\n    this.domain = domain;\n\n    let [startChr, startPair] = domain[0]\n      .substring(3) // Remove chr\n      .split(\":\"); // split chromesome and pair number\n    startPair = parseInt(startPair);\n\n    let [endChr, endPair] = domain[1].substring(3).split(\":\");\n    endPair = parseInt(endPair);\n\n    this.mapPairToGenomeIndex = createPairMapperToGenome(genomeId);\n    const firstPairInDomain = this.mapPairToGenomeIndex(startChr, startPair);\n    const lastPairInDomain = this.mapPairToGenomeIndex(endChr, endPair);\n    this.mapGenomeIndexToClipSpace = scale(\n      [firstPairInDomain, lastPairInDomain],\n      [-1, 1]\n    );\n    this.mapGenomeIndexToClipSpaceInverse = scale(\n      [-1, 1],\n      [firstPairInDomain, lastPairInDomain]\n    );\n  }\n\n  /**\n   * Map a genome pair to [-1, 1] with the parts.\n   *\n   * @param {String} chr id of chromosome in genome\n   * @param {Number} pair location in chromosome\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromParts(chr, pair) {\n    return this.mapGenomeIndexToClipSpace(this.mapPairToGenomeIndex(chr, pair));\n  }\n\n  /**\n   * Utility method for calling this.toClipSpaceFromParts.\n   *\n   * @param {String} pairStr in form \"chrID:geneNumber\" ex: \"chr1:1000\"\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromString(pairStr) {\n    let [chr, pair] = pairStr.substring(3).split(\":\");\n    pair = parseInt(pair);\n    return this.toClipSpaceFromParts(chr, pair);\n  }\n\n  /**\n   * Get the gene id from a value between [-1, 1]\n   *\n   * @param {Number} num number between [-1, 1]\n   * @param {String} formatting used for formatting gene number with d3-format\n   * @returns `chr${chrId}:${chrLoc}`\n   */\n  inverse(num, formatting = false) {\n    let genomeSpot = Math.floor(this.mapGenomeIndexToClipSpaceInverse(num));\n    let chrId;\n    let chrLoc;\n    let cumulativeTotal = 0;\n    for (const [chrKey, pairCount] of genomeSizes[this.genomeId].entries()) {\n      if (cumulativeTotal + pairCount >= genomeSpot) {\n        chrLoc = genomeSpot - cumulativeTotal;\n        chrId = chrKey;\n        break;\n      }\n      cumulativeTotal += pairCount;\n    }\n\n    return formatting\n      ? `chr${chrId}:${format(formatting)(chrLoc)}`\n      : `chr${chrId}:${chrLoc}`;\n  }\n\n  getMidpoint(chr1, gene1, chr2, gene2) {\n    const x1 = this.toClipSpaceFromParts(chr1, gene1);\n    const x2 = this.toClipSpaceFromParts(chr2, gene2);\n    const middleGene = this.inverse((x1 + x2) / 2);\n    const [chrId, gene] = middleGene.substring(3).split(\":\");\n    return [chrId, parseInt(gene)];\n  }\n\n  /**\n   * Get a sequence of ticks for a range in the genome.\n   *\n   * @param {Number} start number between [-1, 1]\n   * @param {Number} end number between [-1, 1] > start\n   * @returns object with tickCoords and corresponding tickLabels property\n   */\n  getTickCoordsAndLabels(start, end) {\n    let [startChr, startPair] = this.inverse(start).substring(3).split(\":\");\n    let [endChr, endPair] = this.inverse(end).substring(3).split(\":\");\n\n    const toReturn = [];\n    let suggestedFormat;\n    if (startChr === endChr) {\n      let difference = endPair - startPair;\n      let magnitude = Math.floor(Math.log10(difference));\n      let startingValue = startPair - (startPair % 10 ** magnitude);\n      suggestedFormat = precisionRound(10 ** magnitude, startingValue);\n\n      for (\n        let currValue = startingValue;\n        currValue < endPair;\n        currValue += 10 ** magnitude\n      ) {\n        toReturn.push(this.toClipSpaceFromParts(startChr, currValue));\n      }\n    } else {\n      suggestedFormat = \"1\";\n      for (const chrId of genomeSizes[this.genomeId].keys()) {\n        toReturn.push(this.toClipSpaceFromParts(chrId, 1));\n      }\n    }\n    return {\n      tickCoords: toReturn,\n      tickLabels: toReturn.map((coord) =>\n        this.inverse(coord, format(`.${suggestedFormat}s`))\n      ),\n    };\n  }\n\n  toCallable() {\n    // TODO investigate if using this method in the vertex calculator leads to slow downs\n    const func = (args) => {\n      return this.toClipSpaceFromParts(args[0], args[1]);\n    };\n    func.isGenomeScale = true;\n    func.mapGenomeIndexToClipSpaceInverse =\n      this.mapGenomeIndexToClipSpaceInverse.bind(this);\n    func.getMidpoint = this.getMidpoint.bind(this);\n    func.getTickCoordsAndLabels = this.getTickCoordsAndLabels.bind(this);\n    return func;\n  }\n\n  /**\n   * Utility method for getting a GenomeScale across an entire genome.\n   *\n   * @param {String} genomeId from genomeSizes\n   * @returns a GenomeScale across an entire genome\n   */\n  static completeScale(genomeId) {\n    const chrSizes = genomeSizes[genomeId];\n    const finalEntry = [...chrSizes.entries()][chrSizes.size - 1];\n\n    return new GenomeScale(genomeId, [\n      \"chr1:1\",\n      `chr${finalEntry[0]}:${finalEntry[1]}`,\n    ]);\n  }\n}\n\n/**\n * Available genomes to visualize. Each genome is a map from chromosome id to number of genes in chromosome.\n * Order matters as maps remember insertion order.\n */\nconst genomeSizes = {\n  hg38: new Map([\n    [\"1\", 248956422], // chr1\n    [\"2\", 242193529], // chr2\n    [\"3\", 198295559], // ...\n    [\"4\", 190214555],\n    [\"5\", 181538259],\n    [\"6\", 170805979],\n    [\"7\", 159345973],\n    [\"8\", 145138636],\n    [\"9\", 138394717],\n    [\"10\", 135086622],\n    [\"11\", 133797422],\n    [\"12\", 133275309],\n    [\"13\", 114364328],\n    [\"14\", 107043718],\n    [\"15\", 101991189],\n    [\"16\", 90338345],\n    [\"17\", 83257441],\n    [\"18\", 80373285],\n    [\"19\", 58617616],\n    [\"20\", 64444167], // ...\n    [\"21\", 46709983], // chr21\n    [\"22\", 50818468], // chr22\n    [\"X\", 156040895], // chrX\n    [\"Y\", 57227415], // chrY\n  ]),\n\n  hg19: new Map([\n    [\"1\", 249250621], // chr1\n    [\"2\", 243199373], // chr2\n    [\"3\", 198022430], // ...\n    [\"4\", 191154276],\n    [\"5\", 180915260],\n    [\"6\", 171115067],\n    [\"7\", 159138663],\n    [\"8\", 146364022],\n    [\"9\", 141213431],\n    [\"10\", 135534747],\n    [\"11\", 135006516],\n    [\"12\", 133851895],\n    [\"13\", 115169878],\n    [\"14\", 107349540],\n    [\"15\", 102531392],\n    [\"16\", 90354753],\n    [\"17\", 81195210],\n    [\"18\", 78077248],\n    [\"19\", 59128983],\n    [\"20\", 63025520], // ...\n    [\"21\", 48129895], // chr21\n    [\"22\", 51304566], // chr22\n    [\"X\", 155270560], // chrX\n    [\"Y\", 59373566], // chrY\n  ]),\n\n  mm9: new Map([\n    [\"1\", 197195432],\n    [\"2\", 181748087],\n    [\"3\", 159599783],\n    [\"4\", 155630120],\n    [\"5\", 152537259],\n    [\"6\", 149517037],\n    [\"7\", 152524553],\n    [\"8\", 131738871],\n    [\"9\", 124076172],\n    [\"10\", 129993255],\n    [\"11\", 121843856],\n    [\"12\", 121257530],\n    [\"13\", 120284312],\n    [\"14\", 125194864],\n    [\"15\", 103494974],\n    [\"16\", 98319150],\n    [\"17\", 95272651],\n    [\"18\", 90772031],\n    [\"19\", 61342430],\n    [\"X\", 166650296],\n    [\"Y\", 15902555],\n  ]),\n\n  mm10: new Map([\n    [\"1\", 195471971],\n    [\"2\", 182113224],\n    [\"3\", 160039680],\n    [\"4\", 156508116],\n    [\"5\", 151834684],\n    [\"6\", 149736546],\n    [\"7\", 145441459],\n    [\"8\", 129401213],\n    [\"9\", 124595110],\n    [\"10\", 130694993],\n    [\"11\", 122082543],\n    [\"12\", 120129022],\n    [\"13\", 120421639],\n    [\"14\", 124902244],\n    [\"15\", 104043685],\n    [\"16\", 98207768],\n    [\"17\", 94987271],\n    [\"18\", 90702639],\n    [\"19\", 61431566],\n    [\"X\", 171031299],\n    [\"Y\", 91744698],\n  ]),\n\n  mm39: new Map([\n    [\"1\", 195154279], // chr1\n    [\"2\", 181755017], // chr2\n    [\"3\", 159745316], // ...\n    [\"4\", 156860686],\n    [\"5\", 151758149],\n    [\"6\", 149588044],\n    [\"7\", 144995196],\n    [\"8\", 130127694],\n    [\"9\", 124359700],\n    [\"10\", 130530862],\n    [\"11\", 121973369],\n    [\"12\", 120092757],\n    [\"13\", 120883175],\n    [\"14\", 125139656],\n    [\"15\", 104073951],\n    [\"16\", 98008968],\n    [\"17\", 95294699], // ...\n    [\"18\", 90720763], // chr18\n    [\"19\", 61420004], // chr19\n    [\"X\", 169476592], // chrX\n    [\"Y\", 91455967], // chrY\n  ]),\n};\n\nexport { genomeSizes, GenomeScale };\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","import { GenomeScale } from \"./genome-sizes\";\nimport { color } from \"d3-color\";\n\n/**\n * Returns a linear scale to map elements in domain to elements in range.\n * @param {Array} domain array of length two containing minimum and maximum values\n * @param {Array} range array of length two containing minimum and maximum values\n * @returns linear scale mapping domain to range\n */\nfunction scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\n/**\n * Maps RGB values to integer for webgl buffer.\n *\n * @param {Integer} red value from 0 to 255\n * @param {Integer} green value from 0 to 255\n * @param {Integer} blue value from 0 to 255\n * @returns RGB hex value as integer\n */\nfunction rgbToHex(red, green, blue) {\n  return (red << 16) | (green << 8) | (blue << 0);\n}\n\nfunction rgbStringToHex(rgb) {\n  const colorVals = rgb.substring(4, rgb.length - 1).split(\",\");\n  return rgbToHex(...colorVals.map((asStr) => parseInt(asStr)));\n}\n\nfunction colorSpecifierToHex(specifier) {\n  if (!isNaN(specifier)) {\n    // Specifier is already a hex value\n    return Math.floor(specifier);\n  }\n  const asColor = color(specifier);\n  return rgbToHex(asColor.r, asColor.g, asColor.b);\n}\n\n/**\n * Get the VIEWPORT of the schema to be used by the mouseReader.\n * If all types for a dimension across tracks are categorical or genomic,\n * will default to [-1, 1] for that dimension for the mouseReader. If X or Y\n * has a fixed value, it will consider the width or height channel domains.\n *\n * @param {Object} schema of visualization\n * @returns [smallestX, largestX, smallestY, largestY] of viewport\n */\nfunction getViewportForSchema(schema) {\n  let smallestX = Number.POSITIVE_INFINITY;\n  let largestX = Number.NEGATIVE_INFINITY;\n  let smallestY = Number.POSITIVE_INFINITY;\n  let largestY = Number.NEGATIVE_INFINITY;\n\n  schema.tracks.forEach((track) => {\n    let xDomain = track.x.domain;\n    if (\n      !xDomain &&\n      track.x.value !== undefined &&\n      track.width.domain !== undefined\n    ) {\n      xDomain = track.width.domain;\n    }\n    let yDomain = track.y.domain;\n    if (\n      !yDomain &&\n      track.y.value !== undefined &&\n      track.height &&\n      track.height.domain !== undefined\n    ) {\n      yDomain = track.height.domain;\n    }\n\n    if (xDomain) {\n      smallestX = xDomain[0] < smallestX ? xDomain[0] : smallestX;\n      largestX = xDomain[1] > largestX ? xDomain[1] : largestX;\n    }\n    if (yDomain) {\n      smallestY = yDomain[0] < smallestY ? yDomain[0] : smallestY;\n      largestY = yDomain[1] > largestY ? yDomain[1] : largestY;\n    }\n  });\n  smallestX = smallestX === Number.POSITIVE_INFINITY ? -1 : smallestX;\n  largestX = largestX === Number.NEGATIVE_INFINITY ? 1 : largestX;\n  smallestY = smallestY === Number.POSITIVE_INFINITY ? -1 : smallestY;\n  largestY = largestY === Number.NEGATIVE_INFINITY ? 1 : largestY;\n\n  return [smallestX, largestX, smallestY, largestY];\n}\n\n/**\n * Given a schema, return a SCALE to be used for mapping data points to clip space\n * for the drawer.\n *\n * @param {String} dimension either x or y\n * @param {Object} schema for the visualization\n * @returns function which can be used to map to an \"x\" or \"y\" value\n */\nconst getScaleForSchema = (dimension, schema) => {\n  if (dimension !== \"x\" && dimension !== \"y\") {\n    console.error(`${dimension} is not x or y!`);\n  }\n  let genomic = false;\n  let genome;\n  for (const track of schema.tracks) {\n    if (track[dimension].type && track[dimension].type.includes(\"genomic\")) {\n      genome = track[dimension].genome;\n      genomic = true;\n      break;\n    }\n  }\n\n  if (!genomic) {\n    const viewport = getViewportForSchema(schema);\n    if (dimension === \"x\") {\n      return scale([viewport[0], viewport[1]], [-1, 1]);\n    }\n    return scale([viewport[2], viewport[3]], [-1, 1]);\n  }\n\n  const geneScale = GenomeScale.completeScale(genome);\n\n  let smallestGene = undefined;\n  let smallestGeneValue = Number.POSITIVE_INFINITY;\n  let largestGene = undefined;\n  let largestGeneValue = Number.NEGATIVE_INFINITY;\n\n  for (const track of schema.tracks) {\n    let xDomain = track[dimension].domain;\n    if (xDomain) {\n      if (geneScale.toClipSpaceFromString(xDomain[0]) < smallestGeneValue) {\n        smallestGeneValue = geneScale.toClipSpaceFromString(xDomain[0]);\n        smallestGene = xDomain[0];\n      }\n\n      if (geneScale.toClipSpaceFromString(xDomain[1]) > largestGeneValue) {\n        largestGeneValue = geneScale.toClipSpaceFromString(xDomain[1]);\n        largestGene = xDomain[1];\n      }\n    }\n  }\n\n  const asScale = new GenomeScale(genome, [smallestGene, largestGene]);\n  return asScale.toCallable();\n};\n\nconst RELATIVE_LENGTH_UNITS = [\n  \"em\",\n  \"ex\",\n  \"ch\",\n  \"rem\",\n  \"lh\",\n  \"vw\",\n  \"vh\",\n  \"vmin\",\n  \"vmax\",\n  \"%\",\n];\nconst getPixelMeasurement = (cssMeasurement) => {\n  if (RELATIVE_LENGTH_UNITS.some((unit) => cssMeasurement.includes(unit))) {\n    return false;\n  }\n  const asFloat = parseFloat(cssMeasurement);\n  return isNaN(asFloat) ? false : asFloat;\n};\n\nconst DEFAULT_MARGIN = \"50px\";\nconst DEFAULT_WIDTH = \"100%\";\nconst DEFAULT_HEIGHT = DEFAULT_WIDTH;\nconst getDimAndMarginStyleForSchema = (schema) => {\n  let toReturn = {};\n  const calculatedMargins = {};\n  if (schema.margins === undefined) {\n    toReturn.margin = DEFAULT_MARGIN;\n    calculatedMargins.top = DEFAULT_MARGIN;\n    calculatedMargins.right = DEFAULT_MARGIN;\n    calculatedMargins.bottom = DEFAULT_MARGIN;\n    calculatedMargins.left = DEFAULT_MARGIN;\n  } else {\n    calculatedMargins.top =\n      schema.margins.top === undefined ? DEFAULT_MARGIN : schema.margins.top;\n    calculatedMargins.right =\n      schema.margins.right === undefined\n        ? DEFAULT_MARGIN\n        : schema.margins.right;\n    calculatedMargins.bottom =\n      schema.margins.bottom === undefined\n        ? DEFAULT_MARGIN\n        : schema.margins.bottom;\n    calculatedMargins.left =\n      schema.margins.left === undefined ? DEFAULT_MARGIN : schema.margins.left;\n    // Shorthand for top right bottom left\n    toReturn.margin = `${calculatedMargins.top}\n                       ${calculatedMargins.right}\n                       ${calculatedMargins.bottom}\n                       ${calculatedMargins.left}`;\n  }\n\n  const calculatedWidth = schema.width || DEFAULT_WIDTH;\n  const calculatedHeight = schema.height || DEFAULT_HEIGHT;\n  const allMeasurements = [\n    calculatedMargins.top,\n    calculatedMargins.right,\n    calculatedMargins.bottom,\n    calculatedMargins.left,\n    calculatedWidth,\n    calculatedHeight,\n  ];\n  console.log(allMeasurements.map(getPixelMeasurement));\n  if (allMeasurements.every(getPixelMeasurement)) {\n    // Let's encode as a number to allow users using typescript or doing weird DOM things able to define\n    // the width and height explicitly\n    toReturn.width =\n      getPixelMeasurement(calculatedWidth) -\n      getPixelMeasurement(calculatedMargins.left) -\n      getPixelMeasurement(calculatedMargins.right);\n    toReturn.height =\n      getPixelMeasurement(calculatedHeight) -\n      getPixelMeasurement(calculatedMargins.bottom) -\n      getPixelMeasurement(calculatedMargins.top);\n  } else {\n    // If user is using css units in their margins and dimensions, then use css calc\n    toReturn.width = `calc(\n      ${calculatedWidth} - \n      ${calculatedMargins.left} - \n      ${calculatedMargins.right}\n    )`;\n\n    toReturn.height = `calc(\n      ${calculatedHeight} - \n      ${calculatedMargins.top} - \n      ${calculatedMargins.bottom}\n    )`;\n  }\n\n  return toReturn;\n};\n\n/**\n * We need to calculate points on the arc for that mark type, but it needs to be quick.\n * In addition, it shouldn't be a perfect circle, and also should look somewhat arc like.\n * This utility funciton returns function that takes a value between 0 and 1 where 0 maps\n * to the first control point, and 1 maps to the third control point.\n *\n * https://math.stackexchange.com/a/1361717\n *\n * @param {Array} P0 first control point\n * @param {Array} P1 second control point\n * @param {Array} P2 third control point\n * @returns a function [0, 1] -> point on curve\n */\nconst getQuadraticBezierCurveForPoints = (P0, P1, P2) => {\n  const x = (t) =>\n    (1 - t) ** 2 * P0[0] + 2 * t * (1 - t) * P1[0] + t ** 2 * P2[0];\n  const y = (t) =>\n    (1 - t) ** 2 * P0[1] + 2 * t * (1 - t) * P1[1] + t ** 2 * P2[1];\n  return (t) => [x(t), y(t)];\n};\n\nexport {\n  scale,\n  rgbToHex,\n  rgbStringToHex,\n  getViewportForSchema,\n  colorSpecifierToHex,\n  getScaleForSchema,\n  getDimAndMarginStyleForSchema,\n  getQuadraticBezierCurveForPoints,\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n};\n","import { getDrawModeForTrack } from \"./schema-processor\";\nimport { getQuadraticBezierCurveForPoints } from \"./utilities\";\n\n// Each size unit refers to 1/200 of the clip space\n// e.g. if the canvas is 1000x1000 pixels, and the size value for a mark\n// is 10, then that mark takes up 10/200 = 1/20 of the clip space which\n// is equal to 50 pixels\nconst SIZE_UNITS = 1 / 100;\n\nconst NUMBER_OF_VERTICES_PER_ARC = 20;\n\nconst ARC_HEIGHT_MODIFIER = 10;\n\n/**\n * Get a curve representing the arc with given start and end points\n *\n * https://math.stackexchange.com/a/1484684\n *\n * @param {Array} P0 start of arc\n * @param {Array} P2 end of arc\n * @returns function mapping 0 to beginning of arc, and 1 to end of arc\n */\nconst getCurveForArc = (P0, P2) => {\n  const midpoint = [P0[0] / 2 + P2[0] / 2, P0[1] / 2 + P2[1] / 2];\n  const slope = (P2[1] - P0[1]) / (P2[0] - P0[0]);\n  const distance = Math.sqrt((P2[1] - P0[1]) ** 2 + (P2[0] - P0[0]) ** 2);\n  if (!isFinite(slope)) {\n    // vertical slope\n    return getQuadraticBezierCurveForPoints(\n      P0,\n      [P0[0] - distance, midpoint[1]],\n      P2\n    );\n  }\n\n  const parameterized = (t) => [\n    midpoint[0] + (t / distance) * (P0[1] - P2[1]),\n    midpoint[1] + (t / distance) * (P2[0] - P0[0]),\n  ];\n\n  return getQuadraticBezierCurveForPoints(\n    P0,\n    parameterized(distance * ARC_HEIGHT_MODIFIER),\n    P2\n  );\n};\n\n/**\n * Transform a mark with a range for coordinates into a simpler mark to draw.\n *\n * @param {Object} mark that contains ranges for x or y\n * @returns mark with fixed x and y but with appropriate width and height for drawing\n */\nconst transformGenomicRangeToStandard = (mark, xScale, yScale) => {\n  let x, y, width, height;\n  if (Array.isArray(mark.x)) {\n    let x1 = xScale(mark.x[0]);\n    x = mark.x[0];\n    width = (xScale(mark.x[1]) - x1) / SIZE_UNITS;\n  } else {\n    x = mark.x;\n    width = mark.width;\n  }\n\n  if (Array.isArray(mark.y)) {\n    let y1 = yScale(mark.y[0]);\n    y = mark.y[0];\n    height = (yScale(mark.y[1]) - y1) / SIZE_UNITS;\n  } else {\n    y = mark.y;\n    height = mark.height;\n  }\n  return {\n    x,\n    y,\n    width,\n    height,\n  };\n};\n\n/**\n * Transform a mark with a range for coordinates and a range for width or height into a simpler mark to draw.\n *\n * @param {Object} mark that contains ranges for x and y, and potentially ranges for width and height\n * @returns mark with fixed x, y, width, and height for drawing\n */\nconst transformGenomicRangeArcToStandard = (mark, xScale, yScale) => {\n  let x, y, width, height;\n  if (Array.isArray(mark.x)) {\n    x = xScale.getMidpoint(\n      mark.x[0][0],\n      mark.x[0][1],\n      mark.x[1][0],\n      mark.x[1][1]\n    );\n    let x2 = xScale.getMidpoint(\n      mark.width[0][0],\n      mark.width[0][1],\n      mark.width[1][0],\n      mark.width[1][1]\n    );\n    let x1ClipSpace = xScale(x);\n    let x2ClipSpace = xScale(x2);\n\n    x = x1ClipSpace < x2ClipSpace ? x : x2;\n    width = Math.abs(xScale(x2) - x1ClipSpace) / SIZE_UNITS;\n  } else {\n    x = mark.x;\n    width = mark.width;\n  }\n\n  if (Array.isArray(mark.y)) {\n    y = yScale.getMidpoint(\n      mark.y[0][0],\n      mark.y[0][1],\n      mark.y[1][0],\n      mark.y[1][1]\n    );\n    let y2 = yScale.getMidpoint(\n      mark.height[0][0],\n      mark.height[0][1],\n      mark.height[1][0],\n      mark.height[1][1]\n    );\n\n    let y1ClipSpace = xScale(y);\n    let y2ClipSpace = xScale(y2);\n\n    y = y1ClipSpace < y2ClipSpace ? y : y2;\n    height = Math.abs(yScale(y2) - y1ClipSpace) / SIZE_UNITS;\n  } else {\n    y = mark.y;\n    height = mark.height;\n  }\n  return {\n    x,\n    y,\n    width,\n    height,\n  };\n};\n\nclass VertexCalculator {\n  /**\n   * A class used to construct the vertices of marks that are given to the drawer to draw.\n   *\n   * @param {Function or GenomeScale} xScale maps the x values of the data to clip space [-1, 1]\n   * @param {Function or GenomeScale} yScale maps the y values of the data to clip space [-1, 1]\n   * @param {Object} track from schema\n   */\n  constructor(xScale, yScale, track) {\n    this.xScale = xScale;\n    this.yScale = yScale;\n\n    this.track = track;\n    this.drawMode = getDrawModeForTrack(track);\n  }\n\n  /**\n   * Construct the vertices of a mark.\n   *\n   * @param {Object} mark to draw\n   * @returns vertices of mark\n   */\n  calculateForMark(mark) {\n    if (\n      this.track.x.type === \"genomicRange\" ||\n      this.track.y.type === \"genomicRange\"\n    ) {\n      if (this.track.mark === \"arc\") {\n        return this._calculateForMark(\n          transformGenomicRangeArcToStandard(mark, this.xScale, this.yScale)\n        );\n      }\n      return this._calculateForMark(\n        transformGenomicRangeToStandard(mark, this.xScale, this.yScale)\n      );\n    }\n    return this._calculateForMark(mark);\n  }\n\n  _calculateForMark(mark) {\n    if (this.track.mark === \"area\") {\n      const toReturn = this._getVerticesForAreaSection(mark);\n      this.lastMark = mark;\n      return toReturn;\n    }\n\n    if (this.track.mark === \"tick\") {\n      return this._getVerticesForTick(mark);\n    }\n\n    if (this.track.mark === \"line\") {\n      return this._getVertexForDot(mark);\n    }\n\n    if (this.track.mark === \"rect\") {\n      return this._getVerticesForRect(mark);\n    }\n\n    if (this.track.mark === \"arc\") {\n      return this._getVerticesForArc(mark);\n    }\n\n    switch (mark.shape) {\n      case \"dot\":\n        if (this.drawMode === \"POINTS\") {\n          return this._getVertexForDot(mark);\n        } else {\n          return this._getVerticesForSquare(mark);\n        }\n      case \"triangle\":\n        return this._getVerticesForTriangle(mark);\n      case \"diamond\":\n        return this._getVerticesForPolygon(mark, 4);\n      case \"pentagon\":\n        return this._getVerticesForPolygon(mark, 5);\n      case \"hexagon\":\n        return this._getVerticesForPolygon(mark, 6);\n      case \"circle\":\n        return this._getVerticesForPolygon(mark, 16);\n      case \"cross\":\n        return this._getVerticesForCross(mark);\n      default:\n        console.error(`${mark.shape} is not a valid shape!`);\n    }\n  }\n\n  _mapToGPUSpace(vertices) {\n    let isX = false;\n    return vertices.map((coord) => {\n      isX = !isX;\n      return isX ? this.xScale(coord) : this.yScale(coord);\n    });\n  }\n\n  _getVerticesForArc(mark) {\n    const startPoint = this._mapToGPUSpace([mark.x, mark.y]);\n    const quadraticCurve = getCurveForArc(startPoint, [\n      startPoint[0] + mark.width * SIZE_UNITS,\n      startPoint[1] + mark.height * SIZE_UNITS,\n    ]);\n\n    const vertices = [\n      ...quadraticCurve(0),\n      ...quadraticCurve(1 / NUMBER_OF_VERTICES_PER_ARC),\n    ];\n\n    for (let i = 2; i < NUMBER_OF_VERTICES_PER_ARC + 1; i++) {\n      const nextPoint = quadraticCurve(i / NUMBER_OF_VERTICES_PER_ARC);\n      vertices.push(\n        vertices[vertices.length - 2],\n        vertices[vertices.length - 1],\n        nextPoint[0],\n        nextPoint[1]\n      );\n    }\n\n    return vertices;\n  }\n\n  _getVerticesForAreaSection(mark) {\n    if (!this.lastMark) {\n      return [];\n    }\n\n    return this._mapToGPUSpace([\n      mark.x,\n      mark.y,\n      this.lastMark.x,\n      this.lastMark.y,\n      mark.x,\n      0, // TODO: Replace 0 to let area charts center around some other number\n      this.lastMark.x,\n      this.lastMark.y,\n      this.lastMark.x,\n      0,\n      mark.x,\n      0,\n    ]);\n  }\n\n  _getVerticesForPolygon(mark, sides) {\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    const vertices = [];\n\n    for (let theta = 0; theta < 2 * Math.PI; theta += (2 * Math.PI) / sides) {\n      vertices.push(\n        center[0],\n        center[1],\n        center[0] + (mark.size / 2) * Math.cos(theta) * SIZE_UNITS,\n        center[1] + (mark.size / 2) * Math.sin(theta) * SIZE_UNITS,\n        center[0] +\n          (mark.size / 2) *\n            Math.cos(theta + (2 * Math.PI) / sides) *\n            SIZE_UNITS,\n        center[1] +\n          (mark.size / 2) * Math.sin(theta + (2 * Math.PI) / sides) * SIZE_UNITS\n      );\n    }\n    return vertices;\n  }\n\n  _getVerticesForTriangle(mark) {\n    //     1\n    //    / \\\n    //   2---3\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n\n    return [\n      center[0],\n      center[1] + (mark.size / 2) * SIZE_UNITS,\n      center[0] - (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n      center[0] + (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n    ];\n  }\n\n  _getVertexForDot = (mark) => this._mapToGPUSpace([mark.x, mark.y]);\n\n  _getVerticesForSquare(mark) {\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    return [\n      center[0] + (mark.size / 2) * SIZE_UNITS, //  2------1,4\n      center[1] + (mark.size / 2) * SIZE_UNITS, //  |    /  |\n      center[0] - (mark.size / 2) * SIZE_UNITS, //  |  /    |\n      center[1] + (mark.size / 2) * SIZE_UNITS, // 3,5------6\n      center[0] - (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n      center[0] + (mark.size / 2) * SIZE_UNITS,\n      center[1] + (mark.size / 2) * SIZE_UNITS,\n      center[0] - (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n      center[0] + (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n    ];\n  }\n\n  _getVerticesForRect(mark) {\n    //  1-----------3,6\n    //  |       /    |\n    //  |     /      |\n    // 2,5-----------4\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    return [\n      center[0],\n      center[1] + mark.height * SIZE_UNITS,\n      center[0],\n      center[1],\n      center[0] + mark.width * SIZE_UNITS,\n      center[1] + mark.height * SIZE_UNITS,\n      center[0] + mark.width * SIZE_UNITS,\n      center[1],\n      center[0],\n      center[1],\n      center[0] + mark.width * SIZE_UNITS,\n      center[1] + mark.height * SIZE_UNITS,\n    ];\n  }\n\n  _getVerticesForTick(mark) {\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    // 1----2\n    if (this.track.width) {\n      return [\n        center[0],\n        center[1],\n        center[0] + mark.width * SIZE_UNITS,\n        center[1],\n      ];\n    }\n\n    // 1\n    // |\n    // 2\n    if (mark.height) {\n      // default to mark value which has default if height never specified in track\n      return [\n        center[0],\n        center[1],\n        center[0],\n        center[1] + mark.height * SIZE_UNITS,\n      ];\n    }\n  }\n}\n\nexport default VertexCalculator;\n\nexport {\n  SIZE_UNITS,\n  transformGenomicRangeArcToStandard,\n  transformGenomicRangeToStandard,\n};\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default scheme => interpolateRgbBasis(scheme[scheme.length - 1]);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n","import colors from \"../colors.js\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {\n  rgbStringToHex,\n  scale,\n  colorSpecifierToHex,\n  getScaleForSchema,\n} from \"./utilities\";\nimport { SIZE_UNITS } from \"./vertex-calculator\";\n\nimport * as d3 from \"d3-scale-chromatic\";\n\n// Default channel values of schema which is passed to webgl drawer\nconst DEFAULT_CHANNELS = Object.freeze({\n  size: {\n    value: 1,\n    numComponents: 1,\n    type: \"float\",\n  },\n  color: {\n    value: 255 ** 3,\n    numComponents: 1,\n    type: \"float\",\n  },\n  x: {\n    value: 0,\n    numComponents: null, // x and y are placed in an attribute vector in the shader that is already handled\n    type: null, // i.e. calls to numComponents or type should not happen as it would break the shader\n  },\n  y: {\n    value: 0,\n    numComponents: null,\n    type: null,\n  },\n  opacity: {\n    value: 1,\n    numComponents: 1,\n    type: \"float\",\n  },\n  shape: {\n    value: \"dot\",\n    numComponents: null,\n    type: null, // Will not interact with shader code\n  },\n  width: {\n    // Default values for width and height add complications\n    // to mapping geometry and creating tick vertices\n    value: undefined,\n    numComponents: 1,\n    type: \"float\",\n  },\n\n  height: {\n    value: undefined,\n    numComponents: 1,\n    type: \"float\",\n  },\n});\n\nconst DEFAULT_MAX_SIZE = 100;\nconst DEFAULT_MIN_SIZE = 0;\nconst DEFAULT_MIN_OPACITY = 0;\n\nconst DEFAULT_MIN_WIDTH = 0;\nconst DEFAULT_MIN_HEIGHT = 0;\nconst DEFAULT_MAX_WIDTH = 1 / SIZE_UNITS;\nconst DEFAULT_MAX_HEIGHT = 1 / SIZE_UNITS;\n\nconst DEFAULT_COLOR_SCHEME = \"interpolateBrBG\";\n\n// first value is undefined as categories are 1-indexed\nconst SHAPES = [undefined, \"dot\", \"triangle\", \"circle\", \"diamond\"];\n\n/**\n * Given a track, determine the WebGL draw mode for it\n *\n * @param {Object} track from schema\n * @returns WebGLDrawMode as a string\n */\nconst getDrawModeForTrack = (track) => {\n  switch (track.mark) {\n    case \"line\":\n      return \"LINE_STRIP\";\n    case \"tick\":\n    case \"arc\":\n      return \"LINES\";\n    case \"point\":\n      if (track.shape && track.shape.value !== \"dot\") {\n        return \"TRIANGLES\";\n      } else {\n        return \"POINTS\";\n      }\n    case \"rect\":\n    case \"area\":\n      return \"TRIANGLES\";\n  }\n};\n\nclass SchemaProcessor {\n  /**\n   * Process a schema by reading in the data, the channel information, and producing an\n   * iterator like interface with getNextTrack to feed to a drawer.\n   *\n   * @param {Object} schema user defined schema\n   * @param {Function} callback function to call after all the data has been loaded\n   */\n  constructor(schema, callback) {\n    this.index = 0;\n    this.schema = schema;\n    if (typeof schema.defaultData === \"string\") {\n      // data is a url to get\n      this.dataPromise = fetch(schema.defaultData)\n        .then((response) => response.text())\n        .then((text) => (this.data = text.split(\"\\n\")));\n    } else if (schema.defaultData) {\n      // default data is defined, assumed to be an object\n      this.data = schema.defaultData;\n      this.isInlineData = true;\n    }\n    this.tracks = schema.tracks.map((track) => new Track(this, track));\n\n    const allPromises = this.tracks\n      .map((track) => track.dataPromise)\n      .filter((p) => p); // Removes undefined\n    if (this.dataPromise) {\n      allPromises.push(this.dataPromise);\n    }\n\n    this.xScale = getScaleForSchema(\"x\", schema);\n    this.yScale = getScaleForSchema(\"y\", schema);\n\n    // When all tracks have acquired their data, call the callback\n    // TODO: Allow tracks to be processed while waiting for others, need to keep in mind order\n    Promise.all(allPromises).then(() => callback(this));\n  }\n\n  /**\n   * Get the next track to process\n   * @returns {@link Track}\n   */\n  getNextTrack() {\n    if (this.index >= this.tracks.length) {\n      return null;\n    }\n    return this.tracks[this.index++];\n  }\n}\n\nclass Track {\n  /**\n   * Process a track from a schema by loading data and producing an iterator\n   * like interface with getNextDataPoint or getNextMark.\n   *\n   * @param {Object} schema user defined visualization\n   * @param {Object} track user defined track\n   */\n  constructor(schema, track) {\n    this.track = track;\n\n    if (typeof track.data === \"string\") {\n      // Track has its own data to GET\n      this.dataPromise = fetch(track.data)\n        .then((response) => response.text())\n        .then((text) => {\n          this.data = text.split(/[\\n\\r]+/);\n          this.processHeadersAndMappers();\n          this.hasOwnData = true;\n        });\n    } else if (track.data) {\n      // Track has its own inline data\n      this.data = track.data;\n      this.isInlineData = true;\n      this.processHeadersAndMappers();\n      this.hasOwnData = true;\n    } else if (schema.data) {\n      // Track does not have its own data, but the schema has default data\n      this.data = schema.data;\n      this.isInlineData = schema.isInlineData;\n      this.processHeadersAndMappers();\n    } else if (schema.dataPromise) {\n      // Track does not have its own data, but the schema is GETting default data\n      schema.dataPromise.then(() => {\n        this.data = schema.data;\n        this.processHeadersAndMappers();\n      });\n    } else {\n      console.error(\n        `Could not find data (no defaultData in schema and no data specified for this track) for track ${track}.`\n      );\n    }\n  }\n\n  /**\n   * Read the headers from the first row of data and then build functions to map a data row\n   * to a channel value for drawing. Ultimately a method due to clunky constructor.\n   */\n  processHeadersAndMappers() {\n    // Processing headers\n    if (this.isInlineData) {\n      this.headers = Object.keys(this.data);\n      this.data.length = this.data[this.headers[0]].length; // assign length to data object for iteration\n      this.index = 0;\n    } else {\n      this.headers = this.data[0].split(\",\");\n      this.index = 1; // 1 to skip header\n    }\n\n    // Creating channel mappers\n    this.channelMaps = new Map();\n    Object.keys(DEFAULT_CHANNELS).forEach((channel) => {\n      this.channelMaps.set(channel, this.buildMapperForChannel(channel));\n    });\n  }\n\n  /**\n   * Get the next data point from the track. Returns null when all points have been returned.\n   * @returns A data point with the x and y coordinates and other attributes from the header\n   */\n  getNextDataPoint() {\n    if (this.index >= this.data.length) {\n      return null;\n    }\n\n    const toReturn = { geometry: { coordinates: [], dimensions: [] } };\n    let splitted;\n    if (this.isInlineData) {\n      splitted = this.headers.map((header) => this.data[header][this.index]);\n    } else {\n      const currRow = this.data[this.index];\n      splitted = currRow.split(\",\");\n    }\n\n    this.index++;\n\n    this.headers.forEach((header, index) => {\n      toReturn[header] = splitted[index];\n    });\n\n    const rawHeight = this.channelMaps.get(\"height\")(splitted);\n    const rawWidth = this.channelMaps.get(\"width\")(splitted);\n    const x = this.channelMaps.get(\"x\")(splitted);\n    const y = this.channelMaps.get(\"y\")(splitted);\n    toReturn.geometry.coordinates.push(x, y);\n    toReturn.geometry.dimensions.push(rawWidth, rawHeight);\n    return toReturn;\n  }\n\n  /**\n   * Get the next mark from the track for the drawer to process. Returns null when all\n   * marks have been returned.\n   * @returns An object containing information used to draw a mark for a row of data.\n   */\n  getNextMark() {\n    // Getting the next mark cannot modify the data objects as other tracks may refer to\n    // the same data\n    if (this.index >= this.data.length) {\n      return null;\n    }\n\n    const toReturn = {};\n    let splitted;\n    if (this.isInlineData) {\n      splitted = this.headers.map((header) => this.data[header][this.index]);\n    } else {\n      const currRow = this.data[this.index];\n      splitted = currRow.split(\",\");\n    }\n\n    this.index++;\n\n    this.channelMaps.forEach((mapper, channel) => {\n      toReturn[channel] = mapper(splitted);\n    });\n\n    return toReturn;\n  }\n\n  /**\n   * Builds a function which maps an attribute value to a channel value for use by the drawer.\n   * The function will return a default if not present in the track, or a constant if\n   * value is defined.\n   *\n   * @param {String} channel one of the channels listed in default channels\n   * @returns the function\n   */\n  buildMapperForChannel = (channel) => {\n    if (channel in this.track) {\n      const channelInfo = this.track[channel];\n      if (\"value\" in channelInfo) {\n        if (channel === \"color\") {\n          channelInfo.value = colorSpecifierToHex(channelInfo.value);\n        }\n        return () => channelInfo.value;\n      } else {\n        const attributeIndex = this.headers.indexOf(channelInfo.attribute);\n        let attrMapper;\n\n        switch (channelInfo.type) {\n          case \"inline\":\n            attrMapper = buildMapperForInlineChannel(channel, channelInfo);\n            break;\n          case \"quantitative\":\n            attrMapper = buildMapperForQuantitiveChannel(channel, channelInfo);\n            break;\n          case \"categorical\":\n            attrMapper = buildMapperForCategoricalChannel(channel, channelInfo);\n            break;\n          case \"genomic\":\n            const chrAttributeIndex = this.headers.indexOf(\n              channelInfo.chrAttribute\n            );\n            const geneAttributeIndex = this.headers.indexOf(\n              channelInfo.geneAttribute\n            );\n            attrMapper = buildMapperForGenomicChannel(channel, channelInfo);\n            return (row) =>\n              attrMapper(row[chrAttributeIndex], row[geneAttributeIndex]);\n          case \"genomicRange\":\n            const genomicAttributeIndices = [\n              this.headers.indexOf(channelInfo.chrAttribute),\n              this.headers.indexOf(channelInfo.startAttribute),\n              this.headers.indexOf(channelInfo.endAttribute),\n            ];\n            attrMapper = buildMapperForGenomicRangeChannel(\n              channel,\n              channelInfo\n            );\n            return (\n              row // Pass in values for the genomic attributes to mapper\n            ) =>\n              attrMapper(...genomicAttributeIndices.map((index) => row[index]));\n        }\n        return (row) => attrMapper(row[attributeIndex]);\n      }\n    } else {\n      return () => DEFAULT_CHANNELS[channel].value;\n    }\n  };\n}\n\n/**\n * Build a function which maps an attribute that is a channel value to a compatible value.\n *\n * @param {String} channel the name of the channel to build an inline mapper for\n * @param {Object} channelInfo the info of the channel from a track\n * @returns a function that maps attribute values to appropriate channel values.\n */\nconst buildMapperForInlineChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"width\":\n    case \"height\":\n    case \"size\":\n      return (dimension) => parseFloat(dimension);\n    case \"color\":\n      return (color) => colorSpecifierToHex(color);\n    default:\n      console.info(\n        `No special behavior for ${channel} as an inline attribute.`\n      );\n      return (inlineValue) => inlineValue;\n  }\n};\n\n/**\n * Build a function which maps a numerical value for an attribute to a property of a mark\n * @param {*} channel the name of the quantitative channel to map\n * @param {*} channelInfo the object containing info for this channel from the schema\n * @returns a function that maps a data attribute value to a channel value\n */\nconst buildMapperForQuantitiveChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"x\":\n    case \"y\":\n      // Map x and y to itself, but we need a function to do it\n      return (coord) => parseFloat(coord);\n    case \"opacity\":\n      return scale(channelInfo.domain, [\n        channelInfo.minOpacity || DEFAULT_MIN_OPACITY,\n        1,\n      ]);\n    case \"size\":\n      return scale(channelInfo.domain, [\n        channelInfo.minSize || DEFAULT_MIN_SIZE,\n        channelInfo.maxSize || DEFAULT_MAX_SIZE,\n      ]);\n    case \"color\":\n      const d3colorScale =\n        !channelInfo.colorScheme || !(channelInfo.colorScheme in d3)\n          ? d3[DEFAULT_COLOR_SCHEME]\n          : d3[channelInfo.colorScheme];\n      const zeroToOneScale = scale(channelInfo.domain, [0, 1]);\n      return (attrValue) =>\n        rgbStringToHex(d3colorScale(zeroToOneScale(attrValue)));\n    case \"width\":\n      return scale(channelInfo.domain, [\n        channelInfo.minWidth || DEFAULT_MIN_WIDTH,\n        channelInfo.maxWidth || DEFAULT_MAX_WIDTH,\n      ]);\n    case \"height\":\n      return scale(channelInfo.domain, [\n        channelInfo.minHeight || DEFAULT_MIN_HEIGHT,\n        channelInfo.maxHeight || DEFAULT_MAX_WIDTH,\n      ]);\n    default:\n      console.error(\n        `${channel} is not a supported channel for quantitative attributes!`\n      );\n  }\n};\n\n/**\n * Build a function which maps a discrete (integers are possible) value for an attribute\n * to a property of a mark\n * @param {*} channel the name of the categorical channel to map\n * @param {*} channelInfo the object containing info for this channel from the schema\n * @returns a function that maps a data attribute value to a channel value\n */\nconst buildMapperForCategoricalChannel = (channel, channelInfo) => {\n  const categoryTracker = new Map();\n  let channelScale;\n  switch (channel) {\n    case \"x\":\n    case \"y\":\n      // +1 here to avoid setting x or y at a boundary that makes it not visible\n      channelScale = scale([1, channelInfo.cardinality + 1], [-1, 1]);\n      break;\n    case \"opacity\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [channelInfo.minOpacity || DEFAULT_MIN_OPACITY, 1]\n      );\n      break;\n    case \"size\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [\n          channelInfo.minSize || DEFAULT_MIN_SIZE,\n          channelInfo.maxSize || DEFAULT_MAX_SIZE,\n        ]\n      );\n      break;\n    case \"shape\":\n      channelScale = (categoryId) => SHAPES[categoryId % SHAPES.length];\n      break;\n    case \"color\":\n      let d3colorScale =\n        !channelInfo.colorScheme || !(channelInfo.colorScheme in d3)\n          ? d3[DEFAULT_COLOR_SCHEME]\n          : d3[channelInfo.colorScheme];\n      if (Array.isArray(d3colorScale)) {\n        console.error(\n          \"Currenty only interpolating color schemes are supported, using default\"\n        );\n        d3colorScale = d3[DEFAULT_COLOR_SCHEME];\n      }\n      const zeroToOneScale = scale([1, channelInfo.cardinality], [0, 1]);\n      channelScale = (categoryId) =>\n        rgbStringToHex(d3colorScale(zeroToOneScale(categoryId)));\n      break;\n    case \"width\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [\n          channelInfo.minWidth || DEFAULT_MIN_WIDTH,\n          channelInfo.maxWidth || DEFAULT_MAX_WIDTH,\n        ]\n      );\n      break;\n    case \"height\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [\n          channelInfo.minHeight || DEFAULT_MIN_HEIGHT,\n          channelInfo.maxHeight || DEFAULT_MAX_HEIGHT,\n        ]\n      );\n      break;\n    default:\n      console.error(\n        `${channel} is not a supported channel for categorical attributes!`\n      );\n  }\n\n  return (attrValue) => {\n    if (!categoryTracker.has(attrValue)) {\n      categoryTracker.set(attrValue, categoryTracker.size + 1);\n    }\n    return channelScale(categoryTracker.get(attrValue));\n  };\n};\n\n/**\n * Build a function which maps a genome chr, gene, to an object consumable by a GenomeScale\n * @param {*} channel either x or y\n * @param {*} channelInfo the object containing info for this channel from the schema\n * @returns a function that maps (genomeChr, geneLoc) -> [chrId, geneLocation]\n *  ex: [\"X\", 200]\n */\nconst buildMapperForGenomicChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"x\":\n    case \"y\":\n      return (chr, gene) => {\n        let chrId = chr.startsWith(\"chr\") ? chr.substring(3) : chr.toString();\n        return [chrId, parseInt(gene)];\n      };\n\n    default:\n      console.error(\n        `${channel} is not a supported channel for genomic attributes!`\n      );\n  }\n};\n\n/**\n * Build a function which maps a genome chr, start, and end to an object consumable by a scale\n * @param {*} channel either x or y, width or height may be included if doing arc marks\n * @param {*} channelInfo the object containing info for this channel from the schema\n * @returns a function that maps (genomeChr, genomeStart, genomeEnd) -> an object containing mark metadata for position\n *  format: [chrId, geneLocation, chrId2, geneLocation2]\n *  ex: [\"1\", 1000, \"X\", 2000]\n */\nconst buildMapperForGenomicRangeChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"width\":\n    case \"height\":\n    case \"x\":\n    case \"y\":\n      return (chr, genomeStart, genomeEnd) => {\n        let chrId = chr.startsWith(\"chr\") ? chr.substring(3) : chr.toString();\n        return [\n          [chrId, parseInt(genomeStart)],\n          [chrId, parseInt(genomeEnd)],\n        ];\n      };\n\n    default:\n      console.error(\n        `${channel} is not a supported channel for genomic attributes!`\n      );\n  }\n};\n\nexport default SchemaProcessor;\n\nexport { DEFAULT_CHANNELS, getDrawModeForTrack };\n"],"names":["e","n","v","Object","defineProperty","get","enumerable","x","Math","abs","round","toLocaleString","replace","toString","p","i","toExponential","indexOf","coefficient","slice","length","NaN","grouping","thousands","value","width","t","j","g","max","push","substring","reverse","join","numerals","$2aca6c10a80e10ddf7739ea17aff17d1$var$re","specifier","match","exec","Error","$2aca6c10a80e10ddf7739ea17aff17d1$export$FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","trim","type","$2aca6c10a80e10ddf7739ea17aff17d1$export$default","prototype","undefined","s","out","i0","i1","$10a2fa95dfd2220f3e1faf779eab4b83$export$prefixExponent","d","exponent","min","floor","Array","toFixed","toPrecision","toUpperCase","$2fb9fa8b78e4ad6bfcee6357bf6a9629$var$map","map","$2fb9fa8b78e4ad6bfcee6357bf6a9629$var$prefixes","locale","group","call","Number","currencyPrefix","currency","currencySuffix","decimal","String","percent","minus","nan","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","c","valueNegative","isNaN","charCodeAt","Infinity","padding","format","f","newFormat","k","pow","formatPrefix","$e54f3e6231f10566a1e741bb96437789$var$locale","$e54f3e6231f10566a1e741bb96437789$export$format","$e54f3e6231f10566a1e741bb96437789$export$formatPrefix","$e54f3e6231f10566a1e741bb96437789$export$default","definition","step","$3ebbd6da2f6dbbd2ea0ba22bdc176caf$var$createPairMapperToGenome","genomeId","chrSizes","$3ebbd6da2f6dbbd2ea0ba22bdc176caf$export$genomeSizes","chrStarts","Map","cumulativeTotal","forEach","key","set","chr","pairNum","constructor","domain","console","error","startChr","startPair","split","parseInt","endChr","endPair","mapPairToGenomeIndex","firstPairInDomain","lastPairInDomain","mapGenomeIndexToClipSpace","mapGenomeIndexToClipSpaceInverse","toClipSpaceFromParts","pair","toClipSpaceFromString","pairStr","inverse","num","formatting","genomeSpot","chrId","chrLoc","chrKey","pairCount","entries","getMidpoint","chr1","gene1","chr2","gene2","x1","x2","middleGene","gene","getTickCoordsAndLabels","start","end","toReturn","suggestedFormat","difference","magnitude","log10","startingValue","currValue","keys","tickCoords","tickLabels","coord","toCallable","func","args","isGenomeScale","bind","completeScale","finalEntry","size","$3ebbd6da2f6dbbd2ea0ba22bdc176caf$export$GenomeScale","hg38","hg19","mm9","mm10","mm39","factory","parent","create","$7adb004cb218a5bbfe4f066d028c083f$export$darker","$7adb004cb218a5bbfe4f066d028c083f$export$brighter","$7adb004cb218a5bbfe4f066d028c083f$var$reI","$7adb004cb218a5bbfe4f066d028c083f$var$reN","$7adb004cb218a5bbfe4f066d028c083f$var$reP","$7adb004cb218a5bbfe4f066d028c083f$var$reHex","$7adb004cb218a5bbfe4f066d028c083f$var$reRgbInteger","RegExp","$7adb004cb218a5bbfe4f066d028c083f$var$reRgbPercent","$7adb004cb218a5bbfe4f066d028c083f$var$reRgbaInteger","$7adb004cb218a5bbfe4f066d028c083f$var$reRgbaPercent","$7adb004cb218a5bbfe4f066d028c083f$var$reHslPercent","$7adb004cb218a5bbfe4f066d028c083f$var$reHslaPercent","$7adb004cb218a5bbfe4f066d028c083f$var$named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","$7adb004cb218a5bbfe4f066d028c083f$export$Color","$7adb004cb218a5bbfe4f066d028c083f$export$default","copy","channels","assign","displayable","rgb","hex","$7adb004cb218a5bbfe4f066d028c083f$var$color_formatHex","formatHex","formatHsl","$7adb004cb218a5bbfe4f066d028c083f$var$color_formatHsl","formatRgb","$7adb004cb218a5bbfe4f066d028c083f$var$color_formatRgb","$7adb004cb218a5bbfe4f066d028c083f$export$hslConvert","m","l","$7adb004cb218a5bbfe4f066d028c083f$var$rgbn","$7adb004cb218a5bbfe4f066d028c083f$export$Rgb","$7adb004cb218a5bbfe4f066d028c083f$var$rgba","$7adb004cb218a5bbfe4f066d028c083f$var$hsla","hasOwnProperty","r","b","a","o","opacity","arguments","$7adb004cb218a5bbfe4f066d028c083f$export$rgbConvert","$7adb004cb218a5bbfe4f066d028c083f$export$rgb","brighter","darker","$7adb004cb218a5bbfe4f066d028c083f$var$rgb_formatHex","$7adb004cb218a5bbfe4f066d028c083f$var$rgb_formatRgb","$7adb004cb218a5bbfe4f066d028c083f$var$hex","h","$7adb004cb218a5bbfe4f066d028c083f$var$Hsl","$7adb004cb218a5bbfe4f066d028c083f$export$hsl","m2","m1","$7adb004cb218a5bbfe4f066d028c083f$var$hsl2rgb","$e0b2f6d7a64dda597e5ddf8546d7549d$export$radians","PI","$e0b2f6d7a64dda597e5ddf8546d7549d$export$degrees","$907db14e0037ee8c4008af6b27d5d5b9$var$A","$907db14e0037ee8c4008af6b27d5d5b9$var$B","$907db14e0037ee8c4008af6b27d5d5b9$var$C","$907db14e0037ee8c4008af6b27d5d5b9$var$D","$907db14e0037ee8c4008af6b27d5d5b9$var$E","$907db14e0037ee8c4008af6b27d5d5b9$var$ED","$907db14e0037ee8c4008af6b27d5d5b9$var$EB","$907db14e0037ee8c4008af6b27d5d5b9$var$BC_DA","$907db14e0037ee8c4008af6b27d5d5b9$export$Cubehelix","bl","sqrt","atan2","$907db14e0037ee8c4008af6b27d5d5b9$var$cubehelixConvert","$907db14e0037ee8c4008af6b27d5d5b9$export$default","cosh","cos","sinh","sin","range","domainLength","rangeLength","slope","intercept","colorVals","$ab472fc72a52ba79515db0c00f4f687a$export$rgbToHex","asStr","asColor","schema","smallestX","POSITIVE_INFINITY","largestX","NEGATIVE_INFINITY","smallestY","largestY","tracks","track","xDomain","yDomain","y","height","$ab472fc72a52ba79515db0c00f4f687a$export$getScaleForSchema","dimension","genomic","genome","includes","viewport","$ab472fc72a52ba79515db0c00f4f687a$export$getViewportForSchema","$ab472fc72a52ba79515db0c00f4f687a$export$scale","geneScale","smallestGene","smallestGeneValue","largestGene","largestGeneValue","asScale","$ab472fc72a52ba79515db0c00f4f687a$var$RELATIVE_LENGTH_UNITS","$ab472fc72a52ba79515db0c00f4f687a$var$getPixelMeasurement","cssMeasurement","some","unit","asFloat","parseFloat","$ab472fc72a52ba79515db0c00f4f687a$var$DEFAULT_MARGIN","$ab472fc72a52ba79515db0c00f4f687a$export$DEFAULT_WIDTH","$ab472fc72a52ba79515db0c00f4f687a$export$DEFAULT_HEIGHT","$ab472fc72a52ba79515db0c00f4f687a$export$getDimAndMarginStyleForSchema","calculatedMargins","margins","margin","top","right","bottom","left","calculatedWidth","calculatedHeight","allMeasurements","log","every","$ab472fc72a52ba79515db0c00f4f687a$export$getQuadraticBezierCurveForPoints","P0","P1","P2","$2a4f8c7882dfdea78821148c89bf8779$export$SIZE_UNITS","$2a4f8c7882dfdea78821148c89bf8779$var$NUMBER_OF_VERTICES_PER_ARC","$2a4f8c7882dfdea78821148c89bf8779$var$ARC_HEIGHT_MODIFIER","$2a4f8c7882dfdea78821148c89bf8779$var$getCurveForArc","midpoint","distance","isFinite","parameterized","$2a4f8c7882dfdea78821148c89bf8779$export$transformGenomicRangeToStandard","mark","xScale","yScale","isArray","y1","$2a4f8c7882dfdea78821148c89bf8779$export$transformGenomicRangeArcToStandard","x1ClipSpace","x2ClipSpace","y2","y1ClipSpace","y2ClipSpace","drawMode","calculateForMark","_calculateForMark","_getVerticesForAreaSection","lastMark","_getVerticesForTick","_getVertexForDot","_getVerticesForRect","_getVerticesForArc","shape","_getVerticesForSquare","_getVerticesForTriangle","_getVerticesForPolygon","_getVerticesForCross","_mapToGPUSpace","vertices","isX","startPoint","quadraticCurve","nextPoint","sides","center","theta","colors","t1","v0","v1","v2","v3","t2","t3","values","$375599a4da1b65d5cb14727ae1c76440$export$basis","$f05c0f1df18cdcbb8c89bd834a74fba3$var$linear","$f05c0f1df18cdcbb8c89bd834a74fba3$export$default","$f05c0f1df18cdcbb8c89bd834a74fba3$var$exponential","color","gamma","rgbGamma","spline","$8867071bf24ff06c98ed0266655b2aed$export$rgbBasis","$8867071bf24ff06c98ed0266655b2aed$var$rgbSpline","$8867071bf24ff06c98ed0266655b2aed$export$rgbBasisClosed","hue","cubehelix","cubehelixGamma","$16dfd74275b7f3f919ed1886368053ad$var$cubehelix","$16dfd74275b7f3f919ed1886368053ad$export$cubehelixLong","scheme","$3c4a87764ee6fb16aeb2474e35fdab1b$export$scheme","concat","$24ddf36673e9e28e0941341dc3c785f2$export$scheme","$179a8b8b8db67d5ad439d6ac3c7182eb$export$scheme","$524816fcdb13536f80495f736d65917f$export$scheme","$251124b56c5394ac8628405b3de84fa9$export$scheme","$32431bf18441a7fb330db070edfc883c$export$scheme","$c7f5f49b22ec5b34595f49a2fd2aaee1$export$scheme","$ba7b47a993698c5e9e0a2e9254961594$export$scheme","$ef633573a4755592e04a764629b71759$export$scheme","$ae28bb9ab23f5f71e8524ba5eccd92b9$export$scheme","$5f8c2f587a94f823c8a1f6d04f550a7e$export$scheme","$c0f014e903576e81ccb408b364b01a28$export$scheme","$a24c32d9b190bf1f53fcdba09c8f3cdb$export$scheme","$b34a4a6860e6e162cac5f376a7c2bce7$export$scheme","$f48132aac8a2014065ca5df06491084d$export$scheme","$d98461135c1642b9760794d23f50da25$export$scheme","$b87c5c3c52d2bf6473e3343ea2737700$export$scheme","$5780b8837bc8cec17a7d31fc75365e51$export$scheme","$1ba71507917afa7627f099c514538fcc$export$scheme","$5d39bed682b650a173d710c343b34484$export$scheme","$d814eccc816046871a05c6cfec31f5b4$export$scheme","$97dd71fb905151f911edf5e609f501e8$export$scheme","$346b353850ccabea6a3c428edafbc98f$export$scheme","$03620b39ff16d6b0348f5cfee8b291ce$export$scheme","$1ca1a429a7152769d9863a5d101a5e51$export$scheme","$9e43db3698c8620a3b609bab74afad03$export$scheme","$49446dcc6e5fd4b55152276e7d474151$export$scheme","$e19b68df7f70d4c3877821e5604f5d2f$export$warm","$e19b68df7f70d4c3877821e5604f5d2f$export$cool","$e19b68df7f70d4c3877821e5604f5d2f$var$c","ts","$6545bdfe19c48194fa13cbfc7044d7c8$var$c","$6545bdfe19c48194fa13cbfc7044d7c8$var$pi_1_3","$6545bdfe19c48194fa13cbfc7044d7c8$var$pi_2_3","$d93ff3e8625ab11206964e3bd0e6b61c$var$ramp","$d93ff3e8625ab11206964e3bd0e6b61c$export$magma","$d93ff3e8625ab11206964e3bd0e6b61c$export$inferno","$d93ff3e8625ab11206964e3bd0e6b61c$export$plasma","$a482b49601c034373694faa8888ffe15$export$DEFAULT_CHANNELS","freeze","numComponents","$a482b49601c034373694faa8888ffe15$var$DEFAULT_MAX_SIZE","$a482b49601c034373694faa8888ffe15$var$DEFAULT_MIN_SIZE","$a482b49601c034373694faa8888ffe15$var$DEFAULT_MIN_OPACITY","$a482b49601c034373694faa8888ffe15$var$DEFAULT_MIN_WIDTH","$a482b49601c034373694faa8888ffe15$var$DEFAULT_MIN_HEIGHT","$a482b49601c034373694faa8888ffe15$var$DEFAULT_MAX_WIDTH","$a482b49601c034373694faa8888ffe15$var$DEFAULT_MAX_HEIGHT","$a482b49601c034373694faa8888ffe15$var$DEFAULT_COLOR_SCHEME","$a482b49601c034373694faa8888ffe15$var$SHAPES","$a482b49601c034373694faa8888ffe15$export$getDrawModeForTrack","callback","index","defaultData","dataPromise","fetch","then","response","text","data","isInlineData","$a482b49601c034373694faa8888ffe15$var$Track","allPromises","filter","Promise","all","getNextTrack","processHeadersAndMappers","hasOwnData","headers","channelMaps","channel","buildMapperForChannel","getNextDataPoint","geometry","coordinates","dimensions","splitted","header","currRow","rawHeight","rawWidth","getNextMark","mapper","channelInfo","attributeIndex","attribute","attrMapper","$a482b49601c034373694faa8888ffe15$var$buildMapperForInlineChannel","$a482b49601c034373694faa8888ffe15$var$buildMapperForQuantitiveChannel","$a482b49601c034373694faa8888ffe15$var$buildMapperForCategoricalChannel","chrAttributeIndex","chrAttribute","geneAttributeIndex","geneAttribute","$a482b49601c034373694faa8888ffe15$var$buildMapperForGenomicChannel","row","genomicAttributeIndices","startAttribute","endAttribute","$a482b49601c034373694faa8888ffe15$var$buildMapperForGenomicRangeChannel","info","inlineValue","minOpacity","minSize","maxSize","d3colorScale","colorScheme","zeroToOneScale","attrValue","minWidth","maxWidth","minHeight","maxHeight","categoryTracker","channelScale","cardinality","categoryId","has","startsWith","genomeStart","genomeEnd"],"version":3,"file":"offscreen-webgl-worker.646ed2d6.js.map"}